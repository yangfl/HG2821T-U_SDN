#!/bin/sh
# This script mounts USB mass storage devices when they are plugged in
# and unmounts them when they are removed.
# Copyright (C) 2004, 2005 Martin Dickopp
#
# This file is free software; the copyright holder gives unlimited
# permission to copy and/or distribute it, with or without
# modifications, as long as this notice is preserved.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.
#
set -e
#exec > /dev/null 2>&1

if [ ! -f /var/usbcdcmounttest ]
then
	touch /var/usbcdcmounttest
fi
echo "***********************" >> /var/usbcdcmounttest
echo "opt=$1" >> /var/usbcdcmounttest
echo "DEVNAME=$DEVNAME" >> /var/usbcdcmounttest
echo "DEVPATH=$DEVPATH" >> /var/usbcdcmounttest

echo " " >> /var/usbcdcmounttest
echo "start==" >> /var/usbcdcmounttest
echo start date=`date` >> /var/usbcdcmounttest
echo start opt=$1 >> /var/usbcdcmounttest
echo start idVendor=$2 >> /var/usbcdcmounttest
echo start idProduct=$3 >> /var/usbcdcmounttest
echo start serial=$4 >> /var/usbcdcmounttest
echo start M=$5 >> /var/usbcdcmounttest
echo start vendor=$6 >> /var/usbcdcmounttest
echo start product=$7>> /var/usbcdcmounttest


. /etc/profile
# Log a string via the syslog facility.
log()
{
    if test $1 != debug || expr "$VERBOSE" : "[yY]" > /dev/null; then
	logger -p user.$1 -t "usbmount[$$]" -- "$2"
    fi
}

if test -e "/var/usbcdcmounttest"; then
	 filesize=`ls -l /var/usbcdcmounttest |  awk -F " " '{print $5}'`		
	if [ $filesize -gt 256000 ]
	then 
		rm -rf  /var/usbcdcmounttest 
	fi						
fi

usb_led_off()
{
	if [ -z "`ls /dev/ | grep \"sd|hidraw|ttyACM|ttyUSB\"`" ]
	then
		/usr/bin/led_ctrl set usb off
	fi
}

# Test if /lib/udev/vol_id is executable.
#test -x /lib/udev/vol_id || { log err "cannnot execute /lib/udev/vol_id"; exit 1; }
if [  "$DEVNAME" == "" ]
then
	exit 1
fi

# Default values for configuration variables.

umask 000

if test "$1" = add; then
	/usr/bin/led_ctrl set usb on
	tmp_mainNum=1
	echo "tmp_mainNum=$tmp_mainNum" >> /var/usbcdcmounttest 
	tmp_followNum=`echo ${DEVNAME:11}`   
	INST_NUM=` expr ${tmp_followNum} + 1 `	
	echo "tmp_followNum=$tmp_followNum" >> /var/usbcdcmounttest
	mountpoint=$DEVNAME 
	DevId=30${tmp_mainNum}${tmp_followNum}			                         
				
	VARRESULTFILE=/var/usbmounttest_cdc${tmp_mainNum}_${tmp_followNum} 
	rm -rf $VARRESULTFILE
	touch $VARRESULTFILE
	echo "MOUNTPOINT=$mountpoint" >> $VARRESULTFILE
	echo "DeviceId=$DevId" >> $VARRESULTFILE
	#echo "MODEL=$6" >> $VARRESULTFILE
	#echo "VENDOR=$7" >> $VARRESULTFILE
	echo "DEVPATH=$DEVPATH" >> $VARRESULTFILE
	echo "DEVNAME=$DEVNAME" >> $VARRESULTFILE
	#echo "SERIALNUM=$4" >> $VARRESULTFILE
	#echo "idvendor=$2" >> $VARRESULTFILE
	#echo "idproduct=$3" >> $VARRESULTFILE
	#echo "bcddevice=$5" >> $VARRESULTFILE							
	RESULT="{\"Event\":\"USB_DEV_ACTION\",\"ActionType\":\"USB_DEV_INSERT\",\"DevType\":\"USB_CDC_ACM\",\"DevName\":\"$DEVNAME\",\"MountPath\":\"$mountpoint\",\"DevId\":\"$DevId\",\"Inst_num\":\"$INST_NUM\"}"
	echo "RESULT=$RESULT" >> /var/usbcdcmounttest
	#notify "$RESULT" 18302
	
elif test "$1" = remove; then	
	usb_led_off
	tmp_mainNum=1
	echo "tmp_mainNum=$tmp_mainNum" >> /var/usbcdcmounttest 
	tmp_followNum=`echo ${DEVNAME:11}`
	INST_NUM=` expr ${tmp_followNum} + 1 `	
	DevId=30${tmp_mainNum}${tmp_followNum}	
	mountpoint=$DEVNAME
	VARRESULTFILE=/var/usbmounttest_cdc${tmp_mainNum}_${tmp_followNum} 
	echo "DEVNAME=$DEVNAME" >> /var/usbcdcmounttest
	echo "DEVPATH=$DEVPATH" >> /var/usbcdcmounttest
	echo "DevId=$DevId" >> /var/usbcdcmounttest
	echo "MOUNTPOINT=$mountpoint" >> /var/usbcdcmounttest
	rm -rf $VARRESULTFILE
		
	RESULT="{\"Event\":\"USB_DEV_ACTION\",\"ActionType\":\"USB_DEV_PULL\",\"DevType\":\"USB_CDC_ACM\",\"DevName\":\"$DEVNAME\",\"MountPath\":\"$mountpoint\",\"DevId\":\"$DevId\",\"Inst_num\":\"$INST_NUM\"}"		
	echo "RESULT=$RESULT" >> /var/usbcdcmounttest
	#notify "$RESULT" 18302
fi

echo end date=`date` >> /var/usbcdcmounttest
	    
exit 0
